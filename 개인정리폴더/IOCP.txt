서버환경을 구축하기에 있어 소켓의 블로킹현상을 해결해야 한다.
해결 방법으로는 논블록 소켓을 이용하는 방법 , select()함수를 이용하는 방법 , 접속한 클라이언트 별로 스레드를 띄우는 방법 등 이 있다.
그 중에서 IOCP(I/O Completion Port) 를 이용해 보고자 한다. 그에 앞서 IOCP에 대한 설명을 해놓는다.

IOCP 개요
 - Windows I/O모델 중 대부분의 경우에서 최고의 성능 (윈도우에서만 사용 가능)
 - 별도의 커널 객체를 통한 구현
	- IOCP 객체를 생성해서 핸들을 받아옴(파일 I/O를 할때 파일 자체를 프로그램에 끌고오는게 아니라 핸들을 사용하는 것과 유사)
- 기본적으로 Overlapped I/O CallBack
	- callback 함수들을 멀티쓰레드로 동시에 실행 
- IOCP 객체 내부 Thread Pool 사용
	- Thread Pool : 작업 처리에 사용되는 스레드를 제한된 개수만큼 정해놓고 작업 큐(Queue)에 들어오는 작업들을 하나씩 스레드가 맡아 처리하는 것
	- Thread 생성 파괴 오버헤드 없앰
	- 적은 수의 Thread로 많은 연결을 관리
 - IOCP 객체 내부 Device List 사용
	- 등록된 소켓에 대한 I/O는 IOCP가 처리


주의 사항
 - IOCP는 무조건 Overlapped I/O로만 동작한다. 반드시 Overlapped I/O의 선행이 이루어져야한다.
 - API가 비 직관적이다.
	- 하나의 API를 여러 용도로 사용한다
	- 파라미터에 따라 완전히 다르게 동작한다
	- API이름과 아무 관계도 없는 동작을 하는 경우가 있다




